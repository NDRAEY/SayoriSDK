// -*- C++ -*-

//
// Created by ndraey on 11.01.24.
//

#pragma once

#include "memory"
#include "iostream"

extern "C" {
	#include <stdarg.h>
}

namespace std {
	class string {
	public:
		string();
		string(const char* charptr);
		string(const string& str);
		~string();

		[[nodiscard]] char * begin() const;
		[[nodiscard]] char * end() const;

		const char* c_str() const;
		char* data() const;
		void resize(size_t new_size);
		void Append(const string &str);
		void Append(const char *charptr);
		void Append(char character);

		bool empty() const;
		size_t length() const;
		
		size_t find(const char* s, size_t pos = 0) const;

		string& operator =(const char* charptr);
		string& operator =(const string& charptr);

		string& operator +(const char* charptr);

		string& operator +=(const char* charptr);
		string& operator +=(const string& str);

		char operator[](int index);

		bool operator==(const char* charptr);
		bool operator==(const string& string);

		bool operator!=(const char* charptr);

		friend ostream& operator<<(ostream& stream, const string& str) {
			return stream << str.c_str();
		}

	private:
		char* string_container = nullptr;
		int _length = 0;
	};

	int stoi(const std::string& str, size_t* pos = nullptr, int base = 10);
}

