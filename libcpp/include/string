// -*- C++ -*-

//
// Created by ndraey on 11.01.24.
//

#pragma once

#include "memory"

extern "C" {
	#include <stdarg.h>
}

namespace std {
class string {
public:
    string();
    string(const char* charptr);
    string(const string& str);
    ~string();

    [[nodiscard]] char * begin() const;
    [[nodiscard]] char * end() const;

    const char* AsCharPtr() const;
    void Append(const string &str);
    void Append(const char *charptr);
    void Append(char character);
    string Slice(int start = 0, int sting_length = -1);

    static string FromInt(int number, int base = 10);
    static string FromUInt(size_t number, int base, bool uppercase = false);

    static string Format(const char* format, ...);
    static string FormatVaArgs(const char *format, va_list args);

    string& operator =(const char* charptr);
    string& operator +(const char* charptr);
    string& operator +=(const char* charptr);
    string& operator +=(const string& str);
    char operator[](int index);

private:
    char* string_container = nullptr;
    int length = 0;
};

}

