// -*- C++ -*-

#include "pair"

using namespace std;

namespace std {
	template <typename KeyType, typename ValueType>
	class map {
	public:
		map() = default;
		~map() = default;

		ValueType& operator[](const KeyType& key) {
			for(auto& i : _table) {
				if(i.first == key) {
					return i.second;
				}
			}

			// If element does not exist, create new default pair.
			_table.push_back(MyPair(key, ValueType{}));
			
			return _table.back().second;
		}

	private:
		vector<pair<KeyType, ValueType>> _table;
	};
}

//#include <map>

int main(int argc, char** argv) {
	map<string, int> mapt;

	mapt["yksi"]  = 1;
	mapt["kaksi"] = 2;
	mapt["kolme"] = 3;
	mapt["neljä"] = 4;
	mapt["viisi"] = 5;

	printf("Yksi: %d\n", mapt["yksi"]);
	printf("Kolme: %d\n", mapt["kolme"]);
	printf("Neljä: %d\n", mapt["neljä"]);

	return 0;
}
